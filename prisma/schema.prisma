generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  fullname String @db.VarChar(32) @map("fullname")
  phone String @db.VarChar(32) @map("phone")
  password String @db.VarChar @map("password")
  isAdmin Boolean @default(false) @map("isAdmin")
  createdAt DateTime @default(now()) @map("created_at")

  courses Course[] 
  enrollments Enrollment[]

  @@id([id])
  @@unique([phone])
  @@map("users")
}

model Course {
  id String @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  title String @db.VarChar(32) @map("title")
  description String @db.Text @map("description")
  photo String @map("photo")
  lessonCount Int @map("lessonCount") @default(0)
  userId String @map("userId") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  users User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  lessons Lesson []
  enrollments Enrollment[]

  @@id([id])
  @@map("courses")
}

model Lesson {
  id String @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  title String @db.VarChar(32) @map("title")
  video String @map("video")
  courseId String @map("courseId") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  courses Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("lessons")
}

model Enrollment {
  id String @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  userId String @map("userId") @db.Uuid
  courseId String @map("courseId") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")

  users User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  courses Course @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("enrollments")
  @@unique([userId, courseId])
}